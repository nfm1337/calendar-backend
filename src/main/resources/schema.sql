DROP SCHEMA public CASCADE;
CREATE SCHEMA public;

CREATE TABLE users
(
    id                      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email                   VARCHAR(128) UNIQUE                 NOT NULL,
    password                VARCHAR                             NOT NULL,
    registered_at           TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    invalidate_token_before TIMESTAMP                           NOT NULL
);

CREATE TABLE user_role
(
    user_id INTEGER,
    role    VARCHAR(255),
    PRIMARY KEY (user_id, role)
);

CREATE TABLE user_profile
(
    id               INTEGER PRIMARY KEY,
    first_name       VARCHAR(64),
    last_name        VARCHAR(64),
    sur_name         VARCHAR(64),
    company_name     VARCHAR(256),
    position         VARCHAR(128),
    telegram_chat_id BIGINT,
    time_zone        VARCHAR(64)
);

CREATE TABLE refresh_token
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    INTEGER        NOT NULL,
    token      VARCHAR UNIQUE NOT NULL,
    expires_at TIMESTAMP      NOT NULL
);

CREATE TABLE calendar
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    creator_id INTEGER,
    title      VARCHAR(256) NOT NULL,
    color      VARCHAR(256) NOT NULL
);

CREATE TABLE calendar_event
(
    id                INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    calendar_id       INTEGER,
    creator_id        INTEGER,
    title             VARCHAR(256) NOT NULL,
    description       VARCHAR,
    time_from         TIMESTAMP,
    time_to           TIMESTAMP,
    notification_time TIMESTAMP,
    is_blocking       BOOLEAN
);

CREATE TABLE calendar_user
(
    user_id     INTEGER,
    calendar_id INTEGER,
    role        VARCHAR,
    PRIMARY KEY (user_id, calendar_id)
);

CREATE TABLE calendar_event_user
(
    user_id           INTEGER,
    calendar_event_id INTEGER,
    PRIMARY KEY (user_id, calendar_event_id)
);

CREATE TABLE attachment
(
    id                INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    calendar_event_id INTEGER      NOT NULL,
    title             VARCHAR(512) NOT NULL,
    url               VARCHAR      NOT NULL
);

ALTER TABLE user_role
    ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE user_profile
    ADD FOREIGN KEY (id) REFERENCES users (id);
ALTER TABLE refresh_token
    ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE calendar
    ADD FOREIGN KEY (creator_id) REFERENCES users (id);
ALTER TABLE calendar_event
    ADD FOREIGN KEY (calendar_id) REFERENCES calendar (id);
ALTER TABLE calendar_event
    ADD FOREIGN KEY (creator_id) REFERENCES users (id);
ALTER TABLE calendar_user
    ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE calendar_user
    ADD FOREIGN KEY (calendar_id) REFERENCES calendar (id);
ALTER TABLE calendar_event_user
    ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE calendar_event_user
    ADD FOREIGN KEY (calendar_event_id) REFERENCES calendar_event (id);
ALTER TABLE attachment
    ADD FOREIGN KEY (calendar_event_id) REFERENCES calendar_event (id);
ALTER TABLE refresh_token
    ADD FOREIGN KEY (user_id) REFERENCES users (id)